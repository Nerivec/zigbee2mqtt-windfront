{
    "common": {
        "action": "Action",
        "actions": "Actions",
        "apply": "Apply",
        "attribute": "Attribute",
        "bind": "Bind",
        "clear": "Clear",
        "clear_all": "Clear all",
        "close": "Close",
        "cancel": "Cancel",
        "cluster": "Cluster",
        "clusters": "Clusters",
        "confirmation": "Confirmation prompt",
        "delete": "Delete",
        "destination": "Destination",
        "devices": "Devices",
        "dialog_confirmation_prompt": "Are you sure?",
        "disable": "Disable",
        "search": "Search",
        "highlight": "Highlight",
        "groups": "Groups",
        "loading": "Loading...",
        "none": "None",
        "ok": "OK",
        "read": "Read",
        "save": "Save",
        "select_value": "Select value",
        "select_device": "Select device",
        "select_endpoint": "Select endpoint",
        "select_group": "Select group",
        "source_endpoint": "Source endpoint",
        "the_only_endpoint": "The only endpoint",
        "unbind": "Unbind",
        "write": "Write",
        "destination_endpoint": "Destination endpoint",
        "read_the_docs_info": "Read about this in the documentationâ€¦",
        "page": "Page",
        "go_to_page": "Go to page",
        "show": "Show",
        "min": "Min",
        "max": "Max",
        "done": "Done",
        "documentation": "Documentation",
        "optional": "Optional",
        "init": "Init",
        "undefined": "Undefined",
        "type_to_filter": "Type to filter...",
        "name": "Name",
        "friendly_name": "Friendly name",
        "unknown_device": "Unknown device",
        "unknown_group": "Unknown group",
        "failed": "Failed",
        "disabled": "Disabled",
        "execute": "Execute",
        "command": "Command",
        "payload": "Payload",
        "execute_command": "Execute command",
        "send": "Send",
        "columns": "Columns",
        "entries": "Entries",
        "source": "Source",
        "close_notifications": "Close notifications",
        "more": "More",
        "default": "Default",
        "multi_instance": "Multi-Instance",
        "all_sources": "All sources",
        "show_source_name": "Show source name",
        "show_only": "Show only",
        "empty_exposes_definition": "Empty exposes definition",
        "hide_static_info_alerts": "Hide static info alerts",
        "advanced_search": "Advanced search",
        "reset": "Reset",
        "all": "All",
        "last_seen_filter_info": "In minutes since last table update",
        "feature_type": "Feature type",
        "feature_name": "Feature name",
        "state": "State",
        "scroll_to_top": "Scroll to top",
        "notifications": "Notifications"
    },
    "devicePage": {
        "about": "About",
        "bind": "Bind",
        "clusters": "Clusters",
        "dev_console": "Dev console",
        "reporting": "Reporting",
        "settings": "Settings",
        "settings_specific": "Settings (specific)",
        "state": "State",
        "groups": "Groups",
        "scene": "Scene",
        "exposes": "Exposes",
        "select_a_device": "Select a device"
    },
    "groups": {
        "settings": "Settings",
        "add_to_group_header": "Add a device to the group",
        "add_to_group": "Add to group",
        "create_group": "Create group",
        "friendly_name_placeholder": "bedroom_lights, garden...",
        "remove_group": "Remove group",
        "group_id": "Group ID",
        "group_members": "Group members",
        "group_scenes": "Group scenes",
        "scenes": "Scenes",
        "rename_group": "Rename group",
        "remove_from_group": "Remove from group"
    },
    "logs": {
        "log_level_config": "Log level config",
        "empty_logs_message": "Nothing to display",
        "filter_by_text": "Filter by text",
        "logs_limit": "Logs limit",
        "highlight_only": "Highlight only"
    },
    "network": {
        "network_hierarchy": "Network hierarchy",
        "help": "Help",
        "load": "Load",
        "reload": "Reload",
        "loading": "Depending on the size of the network and the quality of its links, this can take a while.",
        "parent": "Parent",
        "child": "Child",
        "sibling": "Sibling",
        "children": "Children",
        "siblings": "Siblings",
        "previous_children": "Previous children",
        "nodes": "Nodes",
        "edges": "Edges",
        "legend": "Legend",
        "depth": "Depth",
        "routes": "Routes",
        "type": "Type",
        "raw": "Display data/map",
        "graphviz": "External - Graphviz",
        "plantuml": "External - PlantUML",
        "enable_routes": "Enable routes",
        "display_type": "Display type",
        "data": "Data",
        "map": "Map",
        "layout_type": "Layout type",
        "label_type": "Label type",
        "download_image": "Download as image",
        "zoom_in": "Zoom in",
        "zoom_out": "Zoom out",
        "fit_view": "Fit view",
        "reset_controls": "Reset controls",
        "find_node": "Find node",
        "node_strength": "Node strength",
        "link_distance": "Link distance",
        "icons": "Icons",
        "show_icons": "Show icons",
        "copy_paste_on": "Copy and paste the following data in one of the available online viewers/editors.",
        "highlight_info": "Click on a device's image to highlight it automatically.",
        "legend_node_siblings": "Only highest-rated siblings are shown, which should roughly match the actual connections of the network.",
        "legend_node_size": "Nodes are sized by centrality.",
        "legend_node_select": "Selecting a node will select the depending one-hop part of the network.",
        "legend_node_fold": "Node context menu fold/expand button will affect the depending part of the network.",
        "legend_edge_toggle": "Toggling relationship edges will change the layout. When disabling one or more, the actual layout of the network is no longer accurately represented.",
        "begin_info_type": "The type is used to retrieve a different network map format. External ones are meant to be copied for use outside of the frontend (some example websites are given once generated).",
        "begin_info_routes": "Enabling routes will retrieve the routes table from devices (not all coordinators/devices support this, but failures should not prevent the rest of the data from loading). This is currently only used in the 'data' display.",
        "begin_info_display": "The display type allows to switch between a data-oriented view and a map view."
    },
    "navbar": {
        "all": "All",
        "dashboard": "Dashboard",
        "devices": "Devices",
        "disable_join": "Disable join",
        "extensions": "Extensions",
        "groups": "Groups",
        "logs": "Logs",
        "network": "Network",
        "ota": "OTA",
        "permit_join": "Permit join",
        "restart": "Restart",
        "settings": "Settings",
        "toggle_dropdown": "Toggle dropdown",
        "touchlink": "Touchlink",
        "websocket_status": "WebSocket status",
        "transaction_prefix": "Transaction prefix"
    },
    "ota": {
        "check": "Check for new updates",
        "check_selected": "Check selected",
        "update_selected": "Update selected",
        "update_selected_info": "An OTA update is very taxing for a network. Make sure it is stable and opt for less used times.",
        "empty_ota_message": "No device currently support OTA",
        "remaining_time": "Remaining time",
        "schedule": "Schedule update",
        "schedule_info": "Will update on next OTA request from device",
        "unschedule": "Cancel scheduled update",
        "update": "Update device firmware",
        "firmware_version": "Firmware version",
        "available_firmware_version": "Available firmware version",
        "app": "App",
        "stack": "Stack",
        "updating": "Updating",
        "idle": "Idle",
        "available": "Available",
        "scheduled": "Scheduled",
        "schedule_selected": "Schedule selected",
        "unschedule_selected": "Unschedule selected"
    },
    "settings": {
        "about": "About",
        "advanced": "Advanced",
        "availability": "Availability",
        "blocklist": "Blocklist",
        "revision": "Revision",
        "coordinator": "Coordinator",
        "donate": "Donate",
        "donation_text": "Here you can thank us for all the hard work. Don't hesitate to say something nice as well ;)",
        "download_state": "Download state",
        "experimental": "Experimental",
        "external_converters": "External converters",
        "frontend": "Frontend",
        "frontend_version": "Frontend version",
        "main": "Main",
        "mqtt": "MQTT",
        "ota": "OTA updates",
        "passlist": "Passlist",
        "bridge": "Bridge",
        "restart_zigbee2mqtt": "Restart Zigbee2MQTT",
        "serial": "Serial",
        "settings": "Settings",
        "tools": "Tools",
        "zigbee2mqtt_version": "Zigbee2MQTT version",
        "translate": "Translate",
        "stats": "Stats",
        "coordinator_ieee_address": "Coordinator IEEE Address",
        "request_z2m_backup": "Request Z2m backup",
        "add_install_code": "Add install code",
        "install_code": "Install code",
        "homeassistant": "Home Assistant integration",
        "translation_prompt": "You can help with the translation at",
        "zigbee_herdsman_converters_version": "zigbee-herdsman-converters version",
        "zigbee_herdsman_version": "zigbee-herdsman version",
        "localise_images": "Localise device images",
        "frontend_notice": "These settings (and others on specific pages) are stored locally in your browser. Using private windows or clearing the cache will reset them to defaults.",
        "reset_settings": "Reset settings",
        "reset_auth": "Reset auth",
        "reset_all": "Reset all",
        "language": "Language",
        "theme": "Theme",
        "homepage": "Homepage",
        "dashboard_column_display": "Dashboard column display",
        "permit_join_time": "Permit join time",
        "dev_console": "Dev console",
        "max_on_screen_notifications": "Max on-screen notifications",
        "network_raw": "Network data/map",
        "network_map": "Network map",
        "machine": "Machine",
        "node_version": "Node version",
        "version": "Version",
        "health": "Health"
    },
    "health": {
        "awaiting_next_check": "Awaiting next check",
        "last_check": "Last check",
        "response_time": "Response time",
        "os": "OS",
        "process": "Process",
        "load_average": "Load average",
        "ram_usage": "RAM usage",
        "uptime": "Uptime",
        "queued": "Queued",
        "published": "Published",
        "received": "Received",
        "messages": "Messages",
        "messages_per_sec": "Messages per sec",
        "leave_count": "Leave count",
        "network_address_changes": "Network address changes",
        "very_low": "Very low",
        "interview_info": "Device interviews can heavily influence this data.",
        "sent": "Sent",
        "last_message": "Last message",
        "pending_requests": "Pending requests",
        "reconnects": "Reconnects"
    },
    "touchlink": {
        "detected_devices_message": "Detected {{count}} touchlink devices.",
        "rescan": "Scan again",
        "scan": "Scan",
        "identify": "Identify",
        "factory_reset": "Factory reset",
        "scan_source": "Scan source",
        "select_scan_source": "Select scan source"
    },
    "values": {
        "clear": "Clear",
        "closed": "Closed",
        "false": "False",
        "not_supported": "Not supported",
        "occupied": "Occupied",
        "open": "Open",
        "supported": "Supported",
        "true": "True",
        "empty_string": "Empty string(\"\")",
        "leaking": "Leaking",
        "tampered": "Tampered",
        "null": "Null",
        "Clear": "Clear",
        "Closed": "Closed",
        "Occupied": "Occupied",
        "Open": "Open"
    },
    "zigbee": {
        "actions": "Actions",
        "attribute": "Attribute",
        "unknown": "Unknown",
        "mains_single_phase": "Mains (single phase)",
        "mains_3_phase": "Mains (3 phase)",
        "battery": "Battery",
        "dc_source": "DC Source",
        "emergency_mains_constantly_powered": "Emergency mains constantly powered",
        "emergency_mains_and_transfer_switch": "Emergency mains and transfer switch",
        "block_join": "Block from joining again",
        "cluster": "Cluster",
        "description": "Description",
        "device_type": "Device type",
        "endpoint": "Endpoint",
        "firmware_id": "Firmware ID",
        "firmware_build_date": "Firmware build date",
        "force_remove": "Force remove",
        "force_remove_notice": "Use only as last resort (will not propagate to the network)",
        "ieee_address": "IEEE Address",
        "interview": "Interview",
        "interview_failed": "Interview failed",
        "interviewing": "Interviewing",
        "interview_state": "Interview state",
        "last_seen": "Last seen",
        "lqi": "LQI",
        "manufacturer": "Manufacturer",
        "max_rep_interval": "Max rep interval",
        "min_rep_change": "Min rep change",
        "min_rep_interval": "Min rep interval",
        "model": "Model",
        "network_address": "Network address",
        "network_address_hex": "Network address in hexadecimal format",
        "network_address_dec": "Network address in decimal format",
        "none": "None",
        "pic": "Pic",
        "power": "Power",
        "power_level": "power level",
        "reconfigure": "Reconfigure",
        "remove_device": "Remove device",
        "rename_device": "Rename device",
        "select_attribute": "Select attribute",
        "select_cluster": "Select cluster",
        "support_status": "Support status",
        "unsupported": "Unsupported",
        "updating_firmware": "Updating firmware",
        "update_Home_assistant_entity_id": "Update Home Assistant entity ID",
        "zigbee_manufacturer": "ZigBee Manufacturer",
        "zigbee_model": "ZigBee Model",
        "device": "Device",
        "channel": "Channel",
        "possible": "Possible",
        "available": "Available",
        "edit_description": "Edit description",
        "save_description": "Save description",
        "update_description": "Update description",
        "read_write_attributes": "Read / Write attributes from endpoint cluster",
        "input_clusters": "Input clusters",
        "output_clusters": "Output clusters",
        "custom_clusters": "Custom clusters",
        "other_zcl_clusters": "Other ZCL clusters",
        "how_to_add_support": "How to add support?",
        "submit_converter": "Submit converter",
        "request_support": "Request support",
        "report_problem": "Report problem",
        "group": "Group",
        "type": "Type",
        "EndDevice": "End device",
        "Router": "Router",
        "GreenPower": "GreenPower",
        "Unknown": "Unknown",
        "Coordinator": "Coordinator",
        "power_source": "Power source",
        "battery_low": "Battery low",
        "battery_level": "Battery level"
    },
    "scene": {
        "manage_scenes_header": "Manage scenes",
        "add_update_header": "Add/update a scene",
        "scene_id": "Scene ID",
        "recall": "Recall",
        "store": "Store",
        "remove": "Remove",
        "remove_all": "Remove all",
        "add": "Add",
        "select_scene": "Select Scene",
        "scene_name": "Scene Name"
    },
    "stats": {
        "byType": "By device type",
        "byPowerSource": "By power source",
        "byVendor": "By vendor",
        "byModel": "By model",
        "total": "Total"
    },
    "availability": {
        "availability": "Availability",
        "offline": "Offline",
        "online": "Online",
        "disabled": "Disabled",
        "enabled": "Enabled"
    },
    "devConsole": {
        "generate_external_definition": "Generate external definition",
        "generated_external_definition": "Generated external definition",
        "state_property": "State property",
        "state_property_info": "Set the result into the device's state (only for read)",
        "reset_frontend_state": "Reset frontend state",
        "mqtt": "MQTT",
        "external_converters": "External Converters",
        "external_extensions": "External Extensions",
        "topic": "Topic",
        "send_mqtt": "Send MQTT message",
        "mqtt_topic_info": "Omit the 'base_topic', frontend messages are sent over WebSocket directly to Zigbee2MQTT.",
        "code": "Code",
        "add_update_external_extension": "Add or update external extension",
        "create_new_extension": "Create new extension",
        "select_extension_to_edit": "Select extension to edit",
        "add_update_external_converter": "Add or update external converter",
        "create_new_converter": "Create new converter",
        "select_converter_to_edit": "Select converter to edit",
        "codespace_info": "A Github Codespace is available to help in development",
        "show_definition": "Show definition",
        "hide_definition": "Hide definition"
    },
    "settingsSchemaDescriptions": {
        "homeassistant": "Home Assistant integration (MQTT discovery)",
        "homeassistant-enabled": "Enable Home Assistant integration",
        "homeassistant-discovery_topic": "Home Assistant discovery topic",
        "homeassistant-status_topic": "Home Assistant status topic",
        "homeassistant-legacy_action_sensor": "Home Assistant legacy actions sensor, when enabled a action sensor will be discoverd and an empty `action` will be send after every published action.",
        "homeassistant-experimental_event_entities": "Home Assistant experimental event entities, when enabled Zigbee2MQTT will add event entities for exposed actions. The events and attributes are currently deemed experimental and subject to change.",
        "availability": "Checks whether devices are online/offline",
        "availability-enabled": "Enable availability checks",
        "availability-active": "Options for active devices (routers/mains powered)",
        "availability-active-timeout": "Time after which an active device will be marked as offline in minutes",
        "availability-active-max_jitter": "Maximum jitter (in msec) allowed on timeout to avoid availability pings trying to trigger around the same time",
        "availability-active-backoff": "Enable timeout backoff on failed availability pings (x1.5, x3, x6, x12...)",
        "availability-active-pause_on_backoff_gt": "Pause availability pings when backoff reaches over this limit until a new Zigbee message is received from the device. A value of zero disables pausing.",
        "availability-passive": "Options for passive devices (mostly battery powered)",
        "availability-passive-timeout": "Time after which an passive device will be marked as offline in minutes",
        "mqtt-base_topic": "MQTT base topic for Zigbee2MQTT MQTT messages",
        "mqtt-server": "MQTT server URL (use mqtts:// for SSL/TLS connection)",
        "mqtt-keepalive": "MQTT keepalive in second",
        "mqtt-ca": "Absolute path to SSL/TLS certificate of CA used to sign server and client certificates",
        "mqtt-key": "Absolute path to SSL/TLS key for client-authentication",
        "mqtt-cert": "Absolute path to SSL/TLS certificate for client-authentication",
        "mqtt-user": "MQTT server authentication user",
        "mqtt-password": "MQTT server authentication password",
        "mqtt-client_id": "MQTT client ID",
        "mqtt-reject_unauthorized": "Disable self-signed SSL certificate",
        "mqtt-include_device_information": "Include device information to mqtt messages",
        "mqtt-version": "MQTT protocol version",
        "mqtt-force_disable_retain": "Disable retain for all send messages. ONLY enable if your MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration",
        "mqtt-maximum_packet_size": "Specifies the maximum allowed packet length (in bytes) that the server can send to Zigbee2MQTT. NOTE: The same value exists in your MQTT broker but for the length the client can send to it instead.",
        "serial-port": "Location of the adapter. To autodetect the port, set null",
        "serial-disable_led": "Disable LED of the adapter if supported",
        "serial-adapter": "Adapter type, not needed unless you are experiencing problems",
        "serial-baudrate": "Baud rate speed for the serial port. This must match what the firmware on your adapter supports (most commonly 115200).",
        "serial-rtscts": "RTS / CTS Hardware Flow Control for serial port",
        "blocklist": "Block devices from the network (by ieeeAddr)",
        "passlist": "Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!",
        "ota-update_check_interval": "Your device may request a check for a new firmware update. This value determines how frequently third party servers may actually be contacted to look for firmware updates. The value is set in minutes, and the default is 1 day.",
        "ota-disable_automatic_update_check": "Zigbee devices may request a firmware update, and do so frequently, causing Zigbee2MQTT to reach out to third party servers. If you disable these device initiated checks, you can still initiate a firmware update check manually.",
        "ota-zigbee_ota_override_index_location": "Location of override OTA index file",
        "ota-image_block_response_delay": "Limits the rate of requests (in milliseconds) during OTA updates to reduce network congestion. You can increase this value if your network appears unstable during OTA.",
        "ota-default_maximum_data_size": "The size of file chunks sent during an update (in bytes). Note: This value may get ignored for manufacturers that require specific values.",
        "frontend-enabled": "Enable frontend",
        "frontend-package": "Package used for the frontend",
        "frontend-port": "Frontend binding port. Ignored when using a unix domain socket",
        "frontend-host": "Frontend binding host. Binds to a unix socket when an absolute path is given instead.",
        "frontend-auth_token": "Enables authentication, disabled by default",
        "frontend-url": "URL on which the frontend can be reached, currently only used for the Home Assistant device configuration page",
        "frontend-ssl_cert": "SSL Certificate file path for exposing HTTPS. The sibling property 'ssl_key' must be set for HTTPS to be activated.",
        "frontend-ssl_key": "SSL key file path for exposing HTTPS. The sibling property 'ssl_cert' must be set for HTTPS to be activated.",
        "frontend-base_url": "Base URL for the frontend. If hosted under a subpath, e.g. 'http://localhost:8080/z2m', set this to '/z2m'",
        "frontend-notification_filter": "Hide frontend notifications matching specified regex strings. Example: 'z2m: Failed to ping.*'",
        "frontend-disable_ui_serving": "If true, the frontend UI is not served, only the WebSocket is maintained by Zigbee2MQTT (you are required to serve a standalone UI yourself as needed).",
        "advanced-log_rotation": "Log rotation",
        "advanced-log_console_json": "Console json log",
        "advanced-log_symlink_current": "Create symlink to current logs in the log directory",
        "advanced-log_output": "Output location of the log, leave empty to suppress logging",
        "advanced-log_directory": "Location of log directory",
        "advanced-log_file": "Log file name, can also contain timestamp",
        "advanced-log_level": "Logging level",
        "advanced-log_namespaced_levels": "Set individual log levels for certain namespaces",
        "advanced-log_debug_to_mqtt_frontend": "Log debug level to MQTT and frontend (may decrease overall performance)",
        "advanced-log_debug_namespace_ignore": "Do not log these namespaces (regex-based) for debug level",
        "advanced-log_directories_to_keep": "Number of log directories to keep before deleting the oldest one",
        "advanced-log_syslog-host": "The host running syslogd, defaults to localhost.",
        "advanced-log_syslog-port": "The port on the host that syslog is running on, defaults to syslogd's default port.",
        "advanced-log_syslog-protocol": "The network protocol to log over (e.g. tcp4, udp4, tls4, unix, unix-connect, etc).",
        "advanced-log_syslog-path": "The path to the syslog dgram socket (i.e. /dev/log or /var/run/syslog for OS X).",
        "advanced-log_syslog-pid": "PID of the process that log messages are coming from (Default process.pid).",
        "advanced-log_syslog-localhost": "Host to indicate that log messages are coming from (Default: localhost).",
        "advanced-log_syslog-type": "The type of the syslog protocol to use (Default: BSD, also valid: 5424).",
        "advanced-log_syslog-app_name": "The name of the application (Default: Zigbee2MQTT).",
        "advanced-log_syslog-eol": "The end of line character to be added to the end of the message (Default: Message without modifications).",
        "advanced-pan_id": "ZigBee pan ID, changing requires re-pairing all devices!",
        "advanced-ext_pan_id": "Zigbee extended pan ID, changing requires re-pairing all devices!",
        "advanced-channel": "Zigbee channel, changing might require re-pairing some devices! (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid problems)",
        "advanced-adapter_concurrent": "Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)",
        "advanced-adapter_delay": "Adapter delay",
        "advanced-cache_state": "MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant",
        "advanced-cache_state_persistent": "Persist cached state, only used when cache_state: true",
        "advanced-cache_state_send_on_startup": "Send cached state on startup, only used when cache_state: true",
        "advanced-last_seen": "Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message",
        "advanced-elapsed": "Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg",
        "advanced-network_key": "Network encryption key, changing requires re-pairing all devices!",
        "advanced-timestamp_format": "Log timestamp format",
        "advanced-transmit_power": "Transmit power of adapter, only available for Z-Stack (CC253*/CC2652/CC1352) adapters, CC2652 = 5dbm, CC1352 max is = 20dbm (5dbm default)",
        "advanced-output": "Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)",
        "health": "Periodically check the health of Zigbee2MQTT",
        "health-interval": "Interval between checks in minutes",
        "health-reset_on_check": "If true, will reset stats every time the health check is executed (only applicable to stats that can be reset).",
        "definitions-device-friendly_name": "Used in the MQTT topic of a device. By default this is the device ID",
        "definitions-device-retain": "Retain MQTT messages of this device",
        "definitions-device-disabled": "Disables the device (excludes device from network scans, availability and group state updates)",
        "definitions-device-retention": "Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5",
        "definitions-device-qos": "QoS level for MQTT messages of this device",
        "definitions-device-throttle": "The minimum time between payloads in seconds. Payloads received whilst the device is being throttled will be discarded",
        "definitions-device-debounce": "Debounces messages of this device",
        "definitions-device-debounce_ignore": "Protects unique payload values of specified payload properties from overriding within debounce time",
        "definitions-device-optimistic": "Publish optimistic state after set",
        "definitions-device-filtered_attributes": "Filter attributes with regex from published payload.",
        "definitions-device-filtered_cache": "Filter attributes with regex from being added to the cache, this prevents the attribute from being in the published payload when the value didn't change.",
        "definitions-device-filtered_optimistic": "Filter attributes with regex from optimistic publish payload when calling /set. (This has no effect if optimistic is set to false).",
        "definitions-device-icon": "The user-defined device icon for the frontend. It can be a full URL link to an image (e.g. https://SOME.SITE/MODEL123.jpg) or a path to a local file inside the `device_icons` directory (e.g. device_icons/MODEL123.png).",
        "definitions-device-homeassistant-name": "Name of the device in Home Assistant",
        "definitions-group-qos": "QoS level for MQTT messages of this group",
        "definitions-group-off_state": "Control when to publish state OFF or CLOSE for a group. 'all_members_off': only publish state OFF/CLOSE when all group members are in state OFF/CLOSE,  'last_member_state': publish state OFF whenever one of its members changes to OFF"
    }
}
