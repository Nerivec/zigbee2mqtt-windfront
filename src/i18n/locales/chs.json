{
    "availability": {
        "availability": "Availability",
        "disabled": "已禁用",
        "enabled": "已启用",
        "offline": "离线",
        "online": "在线"
    },
    "common": {
        "action": "操作",
        "actions": "操作",
        "all_features": "所有功能",
        "all_properties": "所有属性",
        "all_sources": "所有来源",
        "apply": "应用",
        "attribute": "属性",
        "available_only": "仅可用",
        "battery_low_only": "仅电量低",
        "bind": "绑定",
        "cancel": "取消",
        "clear": "清除",
        "clear_all": "全部清除",
        "close": "关闭",
        "close_notifications": "关闭通知",
        "cluster": "集群",
        "clusters": "集群",
        "columns": "列",
        "command": "命令",
        "confirmation": "确认提示",
        "default": "默认",
        "delete": "删除",
        "destination": "目标",
        "destination_endpoint": "目标端点",
        "devices": "设备",
        "dialog_confirmation_prompt": "您确定吗？",
        "disable": "禁用",
        "disabled": "已禁用",
        "documentation": "文档",
        "done": "完成",
        "empty_exposes_definition": "空暴露定义",
        "enter_auth_token": "输入认证令牌",
        "entries": "条目",
        "execute": "执行",
        "execute_command": "执行命令",
        "failed": "失败",
        "friendly_name": "友好名称",
        "go_to_page": "转到页面",
        "groups": "群组",
        "hide_disabled": "隐藏已禁用",
        "highlight": "高亮",
        "init": "初始化",
        "loading": "加载中...",
        "max": "最大",
        "min": "最小",
        "more": "更多",
        "multi_instance": "多实例",
        "name": "名称",
        "none": "无",
        "ok": "确定",
        "optional": "可选",
        "page": "页面",
        "payload": "负载",
        "read": "读取",
        "read_the_docs_info": "在文档中了解更多…",
        "save": "保存",
        "search": "搜索",
        "select_device": "选择设备",
        "select_endpoint": "选择端点",
        "select_group": "选择群组",
        "select_value": "选择值",
        "send": "发送",
        "show": "显示",
        "show_end_devices": "显示终端设备",
        "show_only": "仅显示",
        "show_routers": "显示路由器",
        "show_source_name": "显示来源名称",
        "source": "来源",
        "source_endpoint": "源端点",
        "the_only_endpoint": "唯一端点",
        "token": "令牌",
        "type_to_filter": "输入以过滤...",
        "unbind": "解除绑定",
        "undefined": "未定义",
        "unknown_device": "未知设备",
        "unknown_group": "未知组",
        "write": "写入"
    },
    "devConsole": {
        "add_update_external_converter": "Add or update external converter",
        "add_update_external_extension": "Add or update external extension",
        "code": "Code",
        "codespace_info": "A Github Codespace is available to help in development",
        "create_new_converter": "Create new converter",
        "create_new_extension": "Create new extension",
        "external_converters": "External Converters",
        "external_extensions": "External Extensions",
        "generate_external_definition": "Generate external definition",
        "generated_external_definition": "Generated external definition",
        "hide_definition": "Hide definition",
        "mqtt": "MQTT",
        "mqtt_topic_info": "Omit the 'base_topic', frontend messages are sent over WebSocket directly to Zigbee2MQTT.",
        "reset_frontend_state": "Reset frontend state",
        "select_converter_to_edit": "Select converter to edit",
        "select_extension_to_edit": "Select extension to edit",
        "send_mqtt": "Send MQTT message",
        "show_definition": "Show definition",
        "state_property": "State property",
        "state_property_info": "Set the result into the device's state (only for read)",
        "topic": "主题"
    },
    "devicePage": {
        "about": "关于",
        "bind": "绑定",
        "clusters": "集群",
        "dev_console": "开发控制台",
        "exposes": "暴露",
        "groups": "群组",
        "reporting": "报告",
        "scene": "场景",
        "select_a_device": "选择设备",
        "settings": "设置",
        "settings_specific": "设置（特定）",
        "state": "状态"
    },
    "groups": {
        "add_to_group": "添加到组",
        "add_to_group_header": "将设备添加到组",
        "create_group": "创建组",
        "friendly_name_placeholder": "卧室灯, 花园...",
        "group_id": "组ID",
        "group_members": "组成员",
        "group_scenes": "组场景",
        "remove_from_group": "从组中移除",
        "remove_group": "移除组",
        "rename_group": "重命名组",
        "scenes": "场景",
        "settings": "设置"
    },
    "health": {
        "awaiting_next_check": "Awaiting next check",
        "interview_info": "Device interviews can heavily influence this data.",
        "last_check": "上次检查",
        "leave_count": "Leave count",
        "load_average": "Load average",
        "messages": "Messages",
        "messages_per_sec": "Messages per sec",
        "network_address_changes": "Network address changes",
        "os": "OS",
        "process": "进程",
        "published": "已发布",
        "queued": "队列中",
        "ram_usage": "RAM usage",
        "received": "Received",
        "response_time": "响应时间",
        "uptime": "运行时间",
        "very_low": "Very low"
    },
    "logs": {
        "empty_logs_message": "无内容显示",
        "filter_by_text": "按文本过滤",
        "highlight_only": "仅高亮",
        "log_level_config": "日志级别配置",
        "logs_limit": "日志限制"
    },
    "navbar": {
        "all": "全部",
        "dashboard": "仪表板",
        "devices": "设备",
        "disable_join": "禁用加入",
        "extensions": "扩展",
        "groups": "群组",
        "logs": "日志",
        "network": "网络",
        "ota": "OTA",
        "permit_join": "允许加入",
        "restart": "重启",
        "settings": "设置",
        "toggle_dropdown": "切换下拉菜单",
        "touchlink": "触摸链接",
        "transaction_prefix": "事务前缀",
        "websocket_status": "WebSocket status"
    },
    "network": {
        "begin_info_display": "The display type allows to switch between a data-oriented view and a map view.",
        "begin_info_routes": "Enabling routes will retrieve the routes table from devices (not all coordinators/devices support this, but failures should not prevent the rest of the data from loading). This is currently only used in the 'data' display.",
        "begin_info_type": "The type is used to retrieve a different network map format. External ones are meant to be copied for use outside of the frontend (some example websites are given once generated).",
        "child": "子节点",
        "children": "子节点",
        "copy_paste_on": "Copy and paste the following data in one of the available online viewers/editors.",
        "data": "数据",
        "depth": "深度",
        "display_type": "显示类型",
        "download_image": "下载为图片",
        "edges": "边",
        "enable_routes": "启用路由",
        "find_node": "查找节点",
        "fit_view": "适合视图",
        "graphviz": "外部 - Graphviz",
        "help": "帮助",
        "highlight_info": "Click on a device's image to highlight it automatically.",
        "icons": "图标",
        "label_type": "标签类型",
        "layout_type": "布局类型",
        "legend": "图例",
        "legend_edge_toggle": "Toggling relationship edges will change the layout. When disabling one or more, the actual layout of the network is no longer accurately represented.",
        "legend_node_fold": "Node context menu fold/expand button will affect the depending part of the network.",
        "legend_node_select": "Selecting a node will select the depending one-hop part of the network.",
        "legend_node_siblings": "Only highest-rated siblings are shown, which should roughly match the actual connections of the network.",
        "legend_node_size": "Nodes are sized by centrality.",
        "link_distance": "Link distance",
        "load": "加载",
        "loading": "根据网络规模和链接质量，这可能需要一些时间。",
        "map": "地图",
        "network_hierarchy": "网络层次结构",
        "node_strength": "节点强度",
        "nodes": "节点",
        "parent": "父节点",
        "plantuml": "外部 - PlantUML",
        "previous_children": "先前子节点",
        "raw": "显示数据/地图",
        "reload": "重新加载",
        "reset_controls": "重置控件",
        "routes": "路由",
        "scroll_to_top": "滚动到顶部",
        "show_icons": "显示图标",
        "sibling": "兄弟节点",
        "siblings": "兄弟节点",
        "type": "类型",
        "zoom_in": "放大",
        "zoom_out": "缩小"
    },
    "ota": {
        "app": "App",
        "available_firmware_version": "Available firmware version",
        "check": "Check for new updates",
        "check_selected": "检查选中项",
        "empty_ota_message": "No device currently support OTA",
        "firmware_version": "Firmware version",
        "remaining_time": "Remaining time",
        "schedule": "Schedule update",
        "schedule_info": "Will update on next OTA request from device",
        "stack": "Stack",
        "unschedule": "Cancel scheduled update",
        "update": "Update device firmware",
        "update_selected": "Update selected",
        "update_selected_info": "An OTA update is very taxing for a network. Make sure it is stable and opt for less used times."
    },
    "scene": {
        "add": "添加",
        "add_update_header": "Add/update a scene",
        "manage_scenes_header": "Manage scenes",
        "recall": "Recall",
        "remove": "移除",
        "remove_all": "Remove all",
        "scene_id": "场景ID",
        "scene_name": "Scene Name",
        "select_scene": "Select Scene",
        "store": "Store"
    },
    "settings": {
        "about": "关于",
        "add_install_code": "Add install code",
        "advanced": "高级",
        "availability": "Availability",
        "blocklist": "阻止列表",
        "bridge": "网桥",
        "coordinator": "协调器",
        "coordinator_ieee_address": "Coordinator IEEE Address",
        "dashboard_column_display": "Dashboard column display",
        "dev_console": "开发控制台",
        "donate": "Donate",
        "donation_text": "在这里您可以感谢我们所有的辛勤工作。也请毫不犹豫地说些好话 ;)",
        "download_state": "Download state",
        "experimental": "Experimental",
        "external_converters": "外部转换器",
        "frontend": "前端",
        "frontend_notice": "这些设置存储在您的浏览器本地。使用隐私窗口或清除缓存将重置为默认值。",
        "frontend_version": "Frontend version",
        "health": "Health",
        "homeassistant": "Home Assistant integration",
        "homepage": "Homepage",
        "install_code": "Install code",
        "language": "语言",
        "localise_images": "Localise device images",
        "machine": "Machine",
        "main": "Main",
        "max_on_screen_notifications": "Max on-screen notifications",
        "mqtt": "MQTT",
        "network_map": "Network map",
        "network_raw": "Network data/map",
        "node_version": "Node version",
        "ota": "OTA updates",
        "passlist": "Passlist",
        "permit_join_time": "允许加入时间",
        "request_z2m_backup": "Request Z2m backup",
        "reset_all": "重置全部",
        "reset_auth": "Reset auth",
        "reset_settings": "重置设置",
        "restart_zigbee2mqtt": "Restart Zigbee2MQTT",
        "revision": "Revision",
        "serial": "Serial",
        "settings": "设置",
        "stats": "Stats",
        "theme": "主题",
        "tools": "工具",
        "translate": "Translate",
        "translation_prompt": "您可以在以下网址帮助翻译",
        "version": "版本",
        "zigbee2mqtt_version": "Zigbee2MQTT version",
        "zigbee_herdsman_converters_version": "zigbee-herdsman-converters version",
        "zigbee_herdsman_version": "zigbee-herdsman version"
    },
    "settingsSchemaDescriptions": {
        "Absolute path to SSL/TLS certificate for client-authentication": "用于客户端身份验证的 SSL/TLS 证书的绝对路径",
        "Absolute path to SSL/TLS certificate of CA used to sign server and client certificates": "用于签署服务器和客户端证书的 CA 的 SSL/TLS 证书的绝对路径",
        "Absolute path to SSL/TLS key for client-authentication": "用于客户端身份验证的 SSL/TLS 密钥的绝对路径",
        "Adapter concurrency (e": {
            "g": {
                " 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)": "Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)"
            }
        },
        "Adapter delay": "适配器延迟",
        "Adapter type, not needed unless you are experiencing problems": "适配器类型，除非遇到问题，否则不需要",
        "Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message": "向 MQTT 消息添加 last_seen 属性，包含最后一条 Zigbee 消息的日期/时间",
        "Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg": "向 MQTT 消息添加 elapsed 属性，包含自上一条消息以来的毫秒数",
        "Allow only certain devices to join the network (by ieeeAddr)": {
            " Note that all devices not on the passlist will be removed from the network!": "Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!"
        },
        "Base URL for the frontend": {
            " If hosted under a subpath, e": {
                "g": {
                    " 'http://localhost:8080/z2m', set this to '/z2m'": "Base URL for the frontend. If hosted under a subpath, e.g. 'http://localhost:8080/z2m', set this to '/z2m'"
                }
            }
        },
        "Baud rate speed for the serial port": {
            " This must match what the firmware on your adapter supports (most commonly 115200)": {
                "": "Baud rate speed for the serial port. This must match what the firmware on your adapter supports (most commonly 115200)."
            }
        },
        "Block devices from the network (by ieeeAddr)": "阻止设备从网络中（通过 ieeeAddr）",
        "Checks whether devices are online/offline": "检查设备是否在线/离线",
        "Console json log": "控制台 JSON 日志",
        "Control when to publish state OFF or CLOSE for a group": {
            " 'all_members_off': only publish state OFF/CLOSE when all group members are in state OFF/CLOSE,  'last_member_state': publish state OFF whenever one of its members changes to OFF": "Control when to publish state OFF or CLOSE for a group. 'all_members_off': only publish state OFF/CLOSE when all group members are in state OFF/CLOSE,  'last_member_state': publish state OFF whenever one of its members changes to OFF"
        },
        "Create symlink to current logs in the log directory": "在日志目录中创建到当前日志的符号链接",
        "Debounces messages of this device": "此设备的消息去抖动",
        "Disable LED of the adapter if supported": "如果支持，禁用适配器的 LED",
        "Disable retain for all send messages": {
            " ONLY enable if your MQTT broker doesn't support retained message (e": {
                "g": {
                    " AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform)": {
                        " Enabling will break the Home Assistant integration": "Disable retain for all send messages. ONLY enable if your MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration"
                    }
                }
            }
        },
        "Disable self-signed SSL certificate": "禁用自签名 SSL 证书",
        "Disables the device (excludes device from network scans, availability and group state updates)": "禁用设备（从网络扫描、可用性和组状态更新中排除设备）",
        "Do not log these namespaces (regex-based) for debug level": "不记录这些命名空间（基于正则表达式）的调试级别",
        "Enable Home Assistant integration": "启用 Home Assistant 集成",
        "Enable availability checks": "启用可用性检查",
        "Enable frontend": "启用前端",
        "Enable timeout backoff on failed availability pings (x1": {
            "5, x3, x6, x12": {
                "": {
                    "": {
                        ")": "Enable timeout backoff on failed availability pings (x1.5, x3, x6, x12...)"
                    }
                }
            }
        },
        "Enables authentication, disabled by default": "启用身份验证，默认禁用",
        "Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)": "设备 'state' 发布时的示例 json：主题：'zigbee2mqtt/my_bulb' 负载 '{\"state\": \"ON\"}' 属性：主题 'zigbee2mqtt/my_bulb/state' 负载 'ON' attribute_and_json：json 和属性兼有（见上文）",
        "Filter attributes with regex from being added to the cache, this prevents the attribute from being in the published payload when the value didn't change": {
            "": "Filter attributes with regex from being added to the cache, this prevents the attribute from being in the published payload when the value didn't change."
        },
        "Filter attributes with regex from optimistic publish payload when calling /set": {
            " (This has no effect if optimistic is set to false)": {
                "": "Filter attributes with regex from optimistic publish payload when calling /set. (This has no effect if optimistic is set to false)."
            }
        },
        "Filter attributes with regex from published payload": {
            "": "Filter attributes with regex from published payload."
        },
        "Frontend binding host": {
            " Binds to a unix socket when an absolute path is given instead": {
                "": "Frontend binding host. Binds to a unix socket when an absolute path is given instead."
            }
        },
        "Frontend binding port": {
            " Ignored when using a unix domain socket": "Frontend binding port. Ignored when using a unix domain socket"
        },
        "Hide frontend notifications matching specified regex strings": {
            " Example: 'z2m: Failed to ping": {
                "*'": "Hide frontend notifications matching specified regex strings. Example: 'z2m: Failed to ping.*'"
            }
        },
        "Home Assistant discovery topic": "Home Assistant 发现主题",
        "Home Assistant experimental event entities, when enabled Zigbee2MQTT will add event entities for exposed actions": {
            " The events and attributes are currently deemed experimental and subject to change": {
                "": "Home Assistant experimental event entities, when enabled Zigbee2MQTT will add event entities for exposed actions. The events and attributes are currently deemed experimental and subject to change."
            }
        },
        "Home Assistant integration (MQTT discovery)": "Home Assistant 集成（MQTT 自动发现）",
        "Home Assistant legacy actions sensor, when enabled a action sensor will be discoverd and an empty `action` will be send after every published action": {
            "": "Home Assistant legacy actions sensor, when enabled a action sensor will be discoverd and an empty `action` will be send after every published action."
        },
        "Home Assistant status topic": "Home Assistant 状态主题",
        "Host to indicate that log messages are coming from (Default: localhost)": {
            "": "Host to indicate that log messages are coming from (Default: localhost)."
        },
        "If true, the frontend UI is not served, only the WebSocket is maintained by Zigbee2MQTT (you are required to serve a standalone UI yourself as needed)": {
            "": "If true, the frontend UI is not served, only the WebSocket is maintained by Zigbee2MQTT (you are required to serve a standalone UI yourself as needed)."
        },
        "If true, will reset stats every time the health check is executed (only applicable to stats that can be reset)": {
            "": "If true, will reset stats every time the health check is executed (only applicable to stats that can be reset)."
        },
        "Include device information to mqtt messages": "在 MQTT 消息中包含设备信息",
        "Interval between checks in minutes": "检查间隔（分钟）",
        "Limits the rate of requests (in milliseconds) during OTA updates to reduce network congestion": {
            " You can increase this value if your network appears unstable during OTA": {
                "": "Limits the rate of requests (in milliseconds) during OTA updates to reduce network congestion. You can increase this value if your network appears unstable during OTA."
            }
        },
        "Location of log directory": "日志目录的位置",
        "Location of override OTA index file": "覆盖 OTA 索引文件的位置",
        "Location of the adapter": {
            " To autodetect the port, set null": "Location of the adapter. To autodetect the port, set null"
        },
        "Log debug level to MQTT and frontend (may decrease overall performance)": "将调试级别记录到 MQTT 和前端（可能会降低整体性能）",
        "Log file name, can also contain timestamp": "日志文件名，也可以包含时间戳",
        "Log rotation": "日志轮转",
        "Log timestamp format": "日志时间戳格式",
        "Logging level": "日志级别",
        "MQTT base topic for Zigbee2MQTT MQTT messages": "Zigbee2MQTT MQTT 消息的基础主题",
        "MQTT client ID": "MQTT 客户端 ID",
        "MQTT keepalive in second": "MQTT 保持连接时间（秒）",
        "MQTT message payload will contain all attributes, not only changed ones": {
            " Has to be true when integrating via Home Assistant": "MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant"
        },
        "MQTT protocol version": "MQTT 协议版本",
        "MQTT server URL (use mqtts:// for SSL/TLS connection)": "MQTT 服务器 URL（使用 mqtts:// 进行 SSL/TLS 连接）",
        "MQTT server authentication password": "MQTT 服务器身份验证密码",
        "MQTT server authentication user": "MQTT 服务器身份验证用户",
        "Maximum jitter (in msec) allowed on timeout to avoid availability pings trying to trigger around the same time": "超时允许的最大抖动（毫秒），以避免可用性 ping 尝试在同一时间触发",
        "Name of the device in Home Assistant": "设备在 Home Assistant 中的名称",
        "Network encryption key, changing requires re-pairing all devices!": "网络加密密钥，更改需要重新配对所有设备！",
        "Number of log directories to keep before deleting the oldest one": "删除最旧日志目录之前要保留的日志目录数量",
        "Options for active devices (routers/mains powered)": "活跃设备的选项（路由器/电源供电）",
        "Options for passive devices (mostly battery powered)": "被动设备的选项（主要是电池供电）",
        "Output location of the log, leave empty to suppress logging": "日志的输出位置，留空以抑制日志记录",
        "PID of the process that log messages are coming from (Default process": {
            "pid)": {
                "": "PID of the process that log messages are coming from (Default process.pid)."
            }
        },
        "Package used for the frontend": "用于前端的包",
        "Pause availability pings when backoff reaches over this limit until a new Zigbee message is received from the device": {
            " A value of zero disables pausing": {
                "": "Pause availability pings when backoff reaches over this limit until a new Zigbee message is received from the device. A value of zero disables pausing."
            }
        },
        "Periodically check the health of Zigbee2MQTT": "定期检查 Zigbee2MQTT 的健康状况",
        "Persist cached state, only used when cache_state: true": "持久化缓存状态，仅在 cache_state: true 时使用",
        "Protects unique payload values of specified payload properties from overriding within debounce time": "保护指定负载属性的唯一负载值在去抖动时间内不被覆盖",
        "Publish optimistic state after set": "设置后发布乐观状态",
        "QoS level for MQTT messages of this device": "此设备 MQTT 消息的 QoS 级别",
        "QoS level for MQTT messages of this group": "此组 MQTT 消息的 QoS 级别",
        "RTS / CTS Hardware Flow Control for serial port": "串行端口的 RTS / CTS 硬件流控制",
        "Retain MQTT messages of this device": "保留此设备的 MQTT 消息",
        "SSL Certificate file path for exposing HTTPS": {
            " The sibling property 'ssl_key' must be set for HTTPS to be activated": {
                "": "SSL Certificate file path for exposing HTTPS. The sibling property 'ssl_key' must be set for HTTPS to be activated."
            }
        },
        "SSL key file path for exposing HTTPS": {
            " The sibling property 'ssl_cert' must be set for HTTPS to be activated": {
                "": "SSL key file path for exposing HTTPS. The sibling property 'ssl_cert' must be set for HTTPS to be activated."
            }
        },
        "Send cached state on startup, only used when cache_state: true": "启动时发送缓存状态，仅在 cache_state: true 时使用",
        "Set individual log levels for certain namespaces": "为特定命名空间设置单独的日志级别",
        "Sets the MQTT Message Expiry in seconds, Make sure to set mqtt": {
            "version to 5": "Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5"
        },
        "Specifies the maximum allowed packet length (in bytes) that the server can send to Zigbee2MQTT": {
            " NOTE: The same value exists in your MQTT broker but for the length the client can send to it instead": {
                "": "Specifies the maximum allowed packet length (in bytes) that the server can send to Zigbee2MQTT. NOTE: The same value exists in your MQTT broker but for the length the client can send to it instead."
            }
        },
        "The end of line character to be added to the end of the message (Default: Message without modifications)": {
            "": "The end of line character to be added to the end of the message (Default: Message without modifications)."
        },
        "The host running syslogd, defaults to localhost": {
            "": "The host running syslogd, defaults to localhost."
        },
        "The minimum time between payloads in seconds": {
            " Payloads received whilst the device is being throttled will be discarded": "The minimum time between payloads in seconds. Payloads received whilst the device is being throttled will be discarded"
        },
        "The name of the application (Default: Zigbee2MQTT)": {
            "": "The name of the application (Default: Zigbee2MQTT)."
        },
        "The network protocol to log over (e": {
            "g": {
                " tcp4, udp4, tls4, unix, unix-connect, etc)": {
                    "": "The network protocol to log over (e.g. tcp4, udp4, tls4, unix, unix-connect, etc)."
                }
            }
        },
        "The path to the syslog dgram socket (i": {
            "e": {
                " /dev/log or /var/run/syslog for OS X)": {
                    "": "The path to the syslog dgram socket (i.e. /dev/log or /var/run/syslog for OS X)."
                }
            }
        },
        "The port on the host that syslog is running on, defaults to syslogd's default port": {
            "": "The port on the host that syslog is running on, defaults to syslogd's default port."
        },
        "The size of file chunks sent during an update (in bytes)": {
            " Note: This value may get ignored for manufacturers that require specific values": {
                "": "The size of file chunks sent during an update (in bytes). Note: This value may get ignored for manufacturers that require specific values."
            }
        },
        "The type of the syslog protocol to use (Default: BSD, also valid: 5424)": {
            "": "The type of the syslog protocol to use (Default: BSD, also valid: 5424)."
        },
        "The user-defined device icon for the frontend": {
            " It can be a full URL link to an image (e": {
                "g": {
                    " https://SOME": {
                        "SITE/MODEL123": {
                            "jpg) or a path to a local file inside the `device_icons` directory (e": {
                                "g": {
                                    " device_icons/MODEL123": {
                                        "png)": {
                                            "": "The user-defined device icon for the frontend. It can be a full URL link to an image (e.g. https://SOME.SITE/MODEL123.jpg) or a path to a local file inside the `device_icons` directory (e.g. device_icons/MODEL123.png)."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Time after which an active device will be marked as offline in minutes": "活跃设备被标记为离线的时间（分钟）",
        "Time after which an passive device will be marked as offline in minutes": "被动设备被标记为离线的时间（分钟）",
        "Transmit power of adapter, only available for Z-Stack (CC253*/CC2652/CC1352) adapters, CC2652 = 5dbm, CC1352 max is = 20dbm (5dbm default)": "适配器的传输功率，仅适用于 Z-Stack（CC253*/CC2652/CC1352）适配器，CC2652 = 5dbm，CC1352 最大为 = 20dbm（默认 5dbm）",
        "URL on which the frontend can be reached, currently only used for the Home Assistant device configuration page": "可以访问前端的 URL，目前仅用于 Home Assistant 设备配置页面",
        "Used in the MQTT topic of a device": {
            " By default this is the device ID": "Used in the MQTT topic of a device. By default this is the device ID"
        },
        "Your device may request a check for a new firmware update": {
            " This value determines how frequently third party servers may actually be contacted to look for firmware updates": {
                " The value is set in minutes, and the default is 1 day": {
                    "": "Your device may request a check for a new firmware update. This value determines how frequently third party servers may actually be contacted to look for firmware updates. The value is set in minutes, and the default is 1 day."
                }
            }
        },
        "ZigBee pan ID, changing requires re-pairing all devices!": "ZigBee PAN ID，更改需要重新配对所有设备！",
        "Zigbee channel, changing might require re-pairing some devices! (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid problems)": "Zigbee 频道，更改可能需要重新配对某些设备！（注意：使用 ZLL 频道：11、15、20 或 25 以避免问题）",
        "Zigbee devices may request a firmware update, and do so frequently, causing Zigbee2MQTT to reach out to third party servers": {
            " If you disable these device initiated checks, you can still initiate a firmware update check manually": {
                "": "Zigbee devices may request a firmware update, and do so frequently, causing Zigbee2MQTT to reach out to third party servers. If you disable these device initiated checks, you can still initiate a firmware update check manually."
            }
        },
        "Zigbee extended pan ID, changing requires re-pairing all devices!": "Zigbee 扩展 PAN ID，更改需要重新配对所有设备！"
    },
    "stats": {
        "byModel": "By model",
        "byPowerSource": "By power source",
        "byType": "By device type",
        "byVendor": "By vendor",
        "total": "总计"
    },
    "touchlink": {
        "detected_devices_message": "Detected {{count}} touchlink devices.",
        "factory_reset": "恢复出厂设置",
        "identify": "识别",
        "rescan": "Scan again",
        "scan": "Scan",
        "scan_source": "Scan source",
        "select_scan_source": "Select scan source"
    },
    "values": {
        "Clear": "清除",
        "Closed": "已关闭",
        "Occupied": "占用",
        "Open": "开放",
        "clear": "清除",
        "closed": "已关闭",
        "empty_string": "空字符串(\"\")",
        "false": "假",
        "leaking": "Leaking",
        "not_supported": "不支持",
        "null": "空值",
        "occupied": "占用",
        "open": "开放",
        "supported": "支持",
        "tampered": "Tampered",
        "true": "真"
    },
    "zigbee": {
        "Coordinator": "协调器",
        "EndDevice": "终端设备",
        "GreenPower": "GreenPower",
        "Router": "路由器",
        "Unknown": "未知",
        "actions": "操作",
        "attribute": "属性",
        "available": "可用",
        "battery": "电池",
        "block_join": "Block from joining again",
        "channel": "Channel",
        "cluster": "集群",
        "custom_clusters": "Custom clusters",
        "dc_source": "DC Source",
        "description": "描述",
        "device": "设备",
        "device_type": "Device type",
        "edit_description": "Edit description",
        "emergency_mains_and_transfer_switch": "Emergency mains and transfer switch",
        "emergency_mains_constantly_powered": "Emergency mains constantly powered",
        "endpoint": "端点",
        "firmware_build_date": "Firmware build date",
        "firmware_id": "Firmware ID",
        "force_remove": "Force remove",
        "force_remove_notice": "Use only as last resort (will not propagate to the network)",
        "group": "组",
        "how_to_add_support": "How to add support?",
        "ieee_address": "IEEE Address",
        "input_clusters": "Input clusters",
        "interview": "访谈",
        "interview_failed": "Interview failed",
        "interview_state": "Interview state",
        "interviewing": "Interviewing",
        "last_seen": "Last seen",
        "lqi": "LQI",
        "mains_3_phase": "Mains (3 phase)",
        "mains_single_phase": "Mains (single phase)",
        "manufacturer": "制造商",
        "max_rep_interval": "Max rep interval",
        "min_rep_change": "Min rep change",
        "min_rep_interval": "Min rep interval",
        "model": "型号",
        "network_address": "Network address",
        "network_address_dec": "Network address in decimal format",
        "network_address_hex": "Network address in hexadecimal format",
        "none": "无",
        "other_zcl_clusters": "Other ZCL clusters",
        "output_clusters": "Output clusters",
        "pic": "Pic",
        "possible": "Possible",
        "power": "电源",
        "power_level": "power level",
        "read_write_attributes": "Read / Write attributes from endpoint cluster",
        "reconfigure": "Reconfigure",
        "remove_device": "Remove device",
        "rename_device": "Rename device",
        "report_problem": "Report problem",
        "request_support": "Request support",
        "save_description": "Save description",
        "select_attribute": "Select attribute",
        "select_cluster": "Select cluster",
        "submit_converter": "Submit converter",
        "support_status": "Support status",
        "type": "类型",
        "unknown": "未知",
        "unsupported": "不支持",
        "update_Home_assistant_entity_id": "Update Home Assistant entity ID",
        "update_description": "Update description",
        "updating_firmware": "Updating firmware",
        "zigbee_manufacturer": "ZigBee Manufacturer",
        "zigbee_model": "ZigBee Model"
    }
}