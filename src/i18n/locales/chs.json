{
    "common": {
        "action": "操作",
        "actions": "操作",
        "apply": "应用",
        "attribute": "属性",
        "bind": "绑定",
        "clear": "清除",
        "clear_all": "全部清除",
        "close": "关闭",
        "cancel": "取消",
        "cluster": "集群",
        "clusters": "集群",
        "confirmation": "确认提示",
        "delete": "删除",
        "destination": "目标",
        "devices": "设备",
        "dialog_confirmation_prompt": "您确定吗？",
        "disable": "禁用",
        "search": "搜索",
        "highlight": "高亮",
        "groups": "群组",
        "loading": "加载中...",
        "none": "无",
        "ok": "确定",
        "read": "读取",
        "save": "保存",
        "select_value": "选择值",
        "select_device": "选择设备",
        "select_endpoint": "选择端点",
        "select_group": "选择群组",
        "source_endpoint": "源端点",
        "the_only_endpoint": "唯一端点",
        "unbind": "解除绑定",
        "write": "写入",
        "destination_endpoint": "目标端点",
        "read_the_docs_info": "在文档中了解更多…",
        "page": "页面",
        "go_to_page": "转到页面",
        "show": "显示",
        "min": "最小",
        "max": "最大",
        "done": "完成",
        "enter_auth_token": "输入认证令牌",
        "token": "令牌",
        "documentation": "文档",
        "optional": "可选",
        "init": "初始化",
        "undefined": "未定义",
        "type_to_filter": "输入以过滤...",
        "name": "名称",
        "friendly_name": "友好名称",
        "unknown_device": "未知设备",
        "unknown_group": "未知组",
        "failed": "失败",
        "disabled": "已禁用",
        "hide_disabled": "隐藏已禁用",
        "battery_low_only": "仅电量低",
        "available_only": "仅可用",
        "execute": "执行",
        "command": "命令",
        "payload": "负载",
        "execute_command": "执行命令",
        "send": "发送",
        "columns": "列",
        "entries": "条目",
        "source": "来源",
        "close_notifications": "关闭通知",
        "more": "更多",
        "default": "默认",
        "multi_instance": "多实例",
        "all_sources": "所有来源",
        "show_source_name": "显示来源名称",
        "show_only": "仅显示",
        "empty_exposes_definition": "空暴露定义",
        "all_features": "所有功能",
        "all_properties": "所有属性",
        "show_routers": "显示路由器",
        "show_end_devices": "显示终端设备"
    },
    "devicePage": {
        "about": "关于",
        "bind": "绑定",
        "clusters": "集群",
        "dev_console": "开发控制台",
        "reporting": "报告",
        "settings": "设置",
        "settings_specific": "设置（特定）",
        "state": "状态",
        "groups": "群组",
        "scene": "场景",
        "exposes": "暴露",
        "select_a_device": "选择设备"
    },
    "groups": {
        "settings": "设置",
        "add_to_group_header": "将设备添加到组",
        "add_to_group": "添加到组",
        "create_group": "创建组",
        "friendly_name_placeholder": "卧室灯, 花园...",
        "remove_group": "移除组",
        "group_id": "组ID",
        "group_members": "组成员",
        "group_scenes": "组场景",
        "scenes": "场景",
        "rename_group": "重命名组",
        "remove_from_group": "从组中移除"
    },
    "logs": {
        "log_level_config": "日志级别配置",
        "empty_logs_message": "无内容显示",
        "filter_by_text": "按文本过滤",
        "logs_limit": "日志限制",
        "highlight_only": "仅高亮"
    },
    "network": {
        "network_hierarchy": "网络层次结构",
        "help": "帮助",
        "load": "加载",
        "reload": "重新加载",
        "loading": "根据网络规模和链接质量，这可能需要一些时间。",
        "parent": "父节点",
        "child": "子节点",
        "sibling": "兄弟节点",
        "children": "子节点",
        "siblings": "兄弟节点",
        "previous_children": "先前子节点",
        "nodes": "节点",
        "edges": "边",
        "legend": "图例",
        "depth": "深度",
        "routes": "路由",
        "type": "类型",
        "raw": "显示数据/地图",
        "graphviz": "外部 - Graphviz",
        "plantuml": "外部 - PlantUML",
        "enable_routes": "启用路由",
        "display_type": "显示类型",
        "data": "数据",
        "map": "地图",
        "layout_type": "布局类型",
        "label_type": "标签类型",
        "download_image": "下载为图片",
        "zoom_in": "放大",
        "zoom_out": "缩小",
        "fit_view": "适合视图",
        "reset_controls": "重置控件",
        "find_node": "查找节点",
        "scroll_to_top": "滚动到顶部",
        "node_strength": "节点强度",
        "link_distance": "链接距离",
        "icons": "图标",
        "show_icons": "显示图标",
        "copy_paste_on": "将以下数据复制并粘贴到可用的在线查看器/编辑器中。",
        "highlight_info": "点击设备图像以自动高亮显示。",
        "legend_node_siblings": "仅显示评级最高的兄弟节点，这应该大致匹配网络的实际连接。",
        "legend_node_size": "节点按中心性调整大小。",
        "legend_node_select": "选择一个节点将选择网络的相关一跳部分。",
        "legend_node_fold": "节点上下文菜单的折叠/展开按钮将影响网络的相关部分。",
        "legend_edge_toggle": "切换关系边将改变布局。禁用一个或多个时，网络的实际布局不再准确表示。",
        "begin_info_type": "The type is used to retrieve a different network map format. 外部 ones are meant to be copied for use outside of the frontend (some example websites are given once generated).",
        "begin_info_routes": "启用路由将从设备检索路由表（并非所有协调器/设备都支持此功能，但失败不应阻止其余数据加载）。这目前仅在'数据'显示中使用。",
        "begin_info_display": "显示类型允许在面向数据的视图和地图视图之间切换。"
    },
    "navbar": {
        "all": "全部",
        "dashboard": "仪表板",
        "devices": "设备",
        "disable_join": "禁用加入",
        "extensions": "扩展",
        "groups": "群组",
        "logs": "日志",
        "network": "网络",
        "ota": "OTA",
        "permit_join": "允许加入",
        "restart": "重启",
        "settings": "设置",
        "toggle_dropdown": "切换下拉菜单",
        "touchlink": "触摸链接",
        "websocket_status": "WebSocket 状态",
        "transaction_prefix": "事务前缀"
    },
    "ota": {
        "check": "检查 for new updates",
        "check_selected": "检查选中项",
        "update_selected": "更新选中项",
        "update_selected_info": "OTA 更新对网络负担很重。确保网络稳定，选择使用较少的时间进行更新。",
        "empty_ota_message": "当前没有设备支持 OTA",
        "remaining_time": "剩余时间",
        "schedule": "Schedule update",
        "schedule_info": "将在设备下次 OTA 请求时更新",
        "unschedule": "取消计划更新",
        "update": "更新设备固件",
        "firmware_version": "固件版本",
        "available_firmware_version": "可用固件版本",
        "app": "App",
        "stack": "Stack"
    },
    "settings": {
        "about": "关于",
        "advanced": "高级",
        "availability": "Availability",
        "blocklist": "阻止列表",
        "revision": "Revision",
        "coordinator": "协调器",
        "donate": "Donate",
        "donation_text": "在这里您可以感谢我们所有的辛勤工作。也请毫不犹豫地说些好话 ;)",
        "download_state": "下载 state",
        "experimental": "Experimental",
        "external_converters": "外部转换器",
        "frontend": "前端",
        "frontend_version": "前端版本",
        "main": "Main",
        "mqtt": "MQTT",
        "ota": "OTA 更新s",
        "passlist": "允许列表",
        "bridge": "网桥",
        "restart_zigbee2mqtt": "重启 Zigbee2MQTT",
        "serial": "Serial",
        "settings": "设置",
        "tools": "工具",
        "zigbee2mqtt_version": "Zigbee2MQTT 版本",
        "translate": "Translate",
        "stats": "Stats",
        "coordinator_ieee_address": "协调器 IEEE Address",
        "request_z2m_backup": "请求 Z2M 备份",
        "add_install_code": "添加 install code",
        "install_code": "Install code",
        "homeassistant": "Home Assistant 集成",
        "translation_prompt": "您可以在以下网址帮助翻译",
        "zigbee_herdsman_converters_version": "zigbee-herdsman-converters 版本",
        "zigbee_herdsman_version": "zigbee-herdsman 版本",
        "localise_images": "本地化设备图像",
        "frontend_notice": "这些设置存储在您的浏览器本地。使用隐私窗口或清除缓存将重置为默认值。",
        "reset_settings": "重置设置",
        "reset_auth": "重置认证",
        "reset_all": "重置全部",
        "language": "语言",
        "theme": "主题",
        "homepage": "主页",
        "dashboard_column_display": "仪表板列显示",
        "permit_join_time": "允许加入时间",
        "dev_console": "开发控制台",
        "max_on_screen_notifications": "屏幕上最大通知数",
        "network_raw": "网络数据/地图",
        "network_map": "网络地图",
        "machine": "机器",
        "node_version": "Node 版本",
        "version": "版本",
        "health": "健康"
    },
    "health": {
        "awaiting_next_check": "等待下次检查",
        "last_check": "上次检查",
        "response_time": "响应时间",
        "os": "OS",
        "process": "进程",
        "load_average": "平均负载",
        "ram_usage": "RAM 使用",
        "uptime": "运行时间",
        "queued": "队列中",
        "published": "已发布",
        "received": "Received",
        "messages": "消息s",
        "messages_per_sec": "消息s per sec",
        "leave_count": "离开计数",
        "network_address_changes": "网络地址更改",
        "very_low": "很低",
        "interview_info": "设备访谈可能会严重影响此数据。"
    },
    "touchlink": {
        "detected_devices_message": "Detected {{count}} touchlink devices.",
        "rescan": "重新扫描",
        "scan": "扫描",
        "identify": "识别",
        "factory_reset": "恢复出厂设置",
        "scan_source": "扫描源",
        "select_scan_source": "选择扫描源"
    },
    "values": {
        "clear": "清除",
        "closed": "已关闭",
        "false": "假",
        "not_supported": "不支持",
        "occupied": "占用",
        "open": "开放",
        "supported": "支持",
        "true": "真",
        "empty_string": "空字符串(\"\")",
        "leaking": "Leaking",
        "tampered": "Tampered",
        "null": "空值",
        "Clear": "清除",
        "Closed": "已关闭",
        "Occupied": "占用",
        "Open": "开放"
    },
    "zigbee": {
        "actions": "操作",
        "attribute": "属性",
        "unknown": "未知",
        "mains_single_phase": "主电源（单相）",
        "mains_3_phase": "Mains (3 phase)",
        "battery": "电池",
        "dc_source": "DC Source",
        "emergency_mains_constantly_powered": "Emergency mains constantly powered",
        "emergency_mains_and_transfer_switch": "Emergency mains and transfer switch",
        "block_join": "Block from joining again",
        "cluster": "集群",
        "description": "描述",
        "device_type": "设备类型",
        "endpoint": "端点",
        "firmware_id": "固件 ID",
        "firmware_build_date": "Firmware build date",
        "force_remove": "Force remove",
        "force_remove_notice": "仅作为最后手段使用（不会传播到网络）",
        "ieee_address": "IEEE 地址",
        "interview": "访谈",
        "interview_failed": "Interview failed",
        "interviewing": "Interviewing",
        "interview_state": "Interview state",
        "last_seen": "最后见于",
        "lqi": "LQI",
        "manufacturer": "制造商",
        "max_rep_interval": "最大 rep interval",
        "min_rep_change": "最小 rep change",
        "min_rep_interval": "最小 rep interval",
        "model": "型号",
        "network_address": "网络地址",
        "network_address_hex": "十六进制格式的网络地址",
        "network_address_dec": "十进制格式的网络地址",
        "none": "无",
        "pic": "Pic",
        "power": "电源",
        "power_level": "power level",
        "reconfigure": "Reconfigure",
        "remove_device": "移除设备",
        "rename_device": "重命名设备",
        "select_attribute": "Select attribute",
        "select_cluster": "Select cluster",
        "support_status": "支持 status",
        "unsupported": "不支持",
        "updating_firmware": "Updating firmware",
        "update_Home_assistant_entity_id": "更新 Home Assistant entity ID",
        "zigbee_manufacturer": "ZigBee 制造商",
        "zigbee_model": "ZigBee 模式l",
        "device": "设备",
        "channel": "通道",
        "possible": "Possible",
        "available": "可用",
        "edit_description": "编辑描述",
        "save_description": "保存描述",
        "update_description": "更新描述",
        "read_write_attributes": "读取 / Write attributes from endpoint cluster",
        "input_clusters": "Input clusters",
        "output_clusters": "Output clusters",
        "custom_clusters": "Custom clusters",
        "other_zcl_clusters": "其他 ZCL 集群",
        "how_to_add_support": "How to add support?",
        "submit_converter": "Submit converter",
        "request_support": "Request support",
        "report_problem": "Report problem",
        "group": "组",
        "type": "类型",
        "EndDevice": "终端设备",
        "Router": "路由器",
        "GreenPower": "GreenPower",
        "Unknown": "未知",
        "Coordinator": "协调器"
    },
    "scene": {
        "manage_scenes_header": "管理场景",
        "add_update_header": "添加/update a scene",
        "scene_id": "场景ID",
        "recall": "Recall",
        "store": "Store",
        "remove": "移除",
        "remove_all": "Remove all",
        "add": "添加",
        "select_scene": "选择场景",
        "scene_name": "场景名称"
    },
    "stats": {
        "byType": "By device type",
        "byPowerSource": "By power source",
        "byVendor": "By vendor",
        "byModel": "By model",
        "total": "总计"
    },
    "availability": {
        "availability": "Availability",
        "offline": "离线",
        "online": "在线",
        "disabled": "已禁用",
        "enabled": "已启用"
    },
    "devConsole": {
        "generate_external_definition": "Generate external definition",
        "generated_external_definition": "Generated external definition",
        "state_property": "状态 property",
        "state_property_info": "将结果设置到设备状态（仅限读取）",
        "reset_frontend_state": "重置前端状态",
        "mqtt": "MQTT",
        "external_converters": "外部 Converters",
        "external_extensions": "外部 扩展",
        "topic": "主题",
        "send_mqtt": "发送 MQTT 消息",
        "mqtt_topic_info": "省略 'base_topic'，前端消息通过 WebSocket 直接发送到 Zigbee2MQTT。",
        "code": "代码",
        "add_update_external_extension": "添加 or update external extension",
        "create_new_extension": "Create new extension",
        "select_extension_to_edit": "Select extension to edit",
        "add_update_external_converter": "添加 or update external converter",
        "create_new_converter": "Create new converter",
        "select_converter_to_edit": "Select converter to edit",
        "codespace_info": "A Github 代码space is available to help in development",
        "show_definition": "显示定义",
        "hide_definition": "Hide definition"
    },
    "settingsSchemaDescriptions": {
        "Home Assistant integration (MQTT discovery)": "Home Assistant 集成（MQTT 发现）",
        "Enable Home Assistant integration": "启用 Home Assistant 集成",
        "Home Assistant discovery topic": "Home Assistant 发现主题",
        "Home Assistant status topic": "Home Assistant 状态主题",
        "Home Assistant legacy actions sensor, when enabled a action sensor will be discoverd and an empty `action` will be send after every published action.": "Home Assistant legacy actions sensor, when enabled a action sensor will be discoverd and an empty `action` will be send after every published action.",
        "Home Assistant experimental event entities, when enabled Zigbee2MQTT will add event entities for exposed actions. The events and attributes are currently deemed experimental and subject to change.": "Home Assistant experimental event entities, when enabled Zigbee2MQTT will add event entities for exposed actions. The events and attributes are currently deemed experimental and subject to change.",
        "Checks whether devices are online/offline": "检查设备是否在线/离线",
        "Enable availability checks": "启用可用性检查",
        "Options for active devices (routers/mains powered)": "活跃设备选项（路由器/主电源供电）",
        "Time after which an active device will be marked as offline in minutes": "Time after which an active device will be marked as offline in 分钟",
        "Maximum jitter (in msec) allowed on timeout to avoid availability pings trying to trigger around the same time": "最大imum jitter (in msec) allowed on timeout to avoid availability pings trying to trigger around the same time",
        "Enable timeout backoff on failed availability pings (x1.5, x3, x6, x12...)": "Enable timeout backoff on failed availability pings (x1.5, x3, x6, x12...)",
        "Pause availability pings when backoff reaches over this limit until a new Zigbee message is received from the device. A value of zero disables pausing.": "Pause availability pings when backoff reaches over this limit until a new Zigbee message is received from the device. A value of zero disables pausing.",
        "Options for passive devices (mostly battery powered)": "被动设备选项（主要是电池供电）",
        "Time after which an passive device will be marked as offline in minutes": "Time after which an passive device will be marked as offline in 分钟",
        "MQTT base topic for Zigbee2MQTT MQTT messages": "Zigbee2MQTT MQTT 消息的基础主题",
        "MQTT server URL (use mqtts:// for SSL/TLS connection)": "MQTT 服务器 URL（使用 mqtts:// 进行 SSL/TLS 连接）",
        "MQTT keepalive in second": "MQTT 保活时间（秒）",
        "Absolute path to SSL/TLS certificate of CA used to sign server and client certificates": "用于签署服务器和客户端证书的 CA 的 SSL/TLS 证书的绝对路径",
        "Absolute path to SSL/TLS key for client-authentication": "用于客户端身份验证的 SSL/TLS 密钥的绝对路径",
        "Absolute path to SSL/TLS certificate for client-authentication": "用于客户端身份验证的 SSL/TLS 证书的绝对路径",
        "MQTT server authentication user": "MQTT 服务器认证用户",
        "MQTT server authentication password": "MQTT 服务器认证密码",
        "MQTT client ID": "MQTT 客户端 ID",
        "Disable self-signed SSL certificate": "禁用自签名 SSL 证书",
        "Include device information to mqtt messages": "在 MQTT 消息中包含设备信息",
        "MQTT protocol version": "MQTT 协议版本",
        "Disable retain for all send messages. ONLY enable if your MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration": "Disable retain for all send messages. ONLY enable if your MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration",
        "Specifies the maximum allowed packet length (in bytes) that the server can send to Zigbee2MQTT. NOTE: The same value exists in your MQTT broker but for the length the client can send to it instead.": "Specifies the maximum allowed packet length (in bytes) that the server can send to Zigbee2MQTT. NOTE: The same value exists in your MQTT broker but for the length the client can send to it instead.",
        "Location of the adapter. To autodetect the port, set null": "Location of the adapter. To autodetect the port, set null",
        "Disable LED of the adapter if supported": "如果支持，禁用适配器的 LED",
        "Adapter type, not needed unless you are experiencing problems": "适配器类型，除非遇到问题，否则不需要",
        "Baud rate speed for the serial port. This must match what the firmware on your adapter supports (most commonly 115200).": "Baud rate speed for the serial port. This must match what the firmware on your adapter supports (most commonly 115200).",
        "RTS / CTS Hardware Flow Control for serial port": "串口的 RTS / CTS 硬件流控制",
        "Block devices from the network (by ieeeAddr)": "阻止设备接入网络（通过 ieeeAddr）",
        "Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!": "Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!",
        "Your device may request a check for a new firmware update. This value determines how frequently third party servers may actually be contacted to look for firmware updates. The value is set in minutes, and the default is 1 day.": "Your device may request a check for a new firmware update. This value determines how frequently third party servers may actually be contacted to look for firmware updates. The value is set in minutes, and the default is 1 day.",
        "Zigbee devices may request a firmware update, and do so frequently, causing Zigbee2MQTT to reach out to third party servers. If you disable these device initiated checks, you can still initiate a firmware update check manually.": "Zigbee devices may request a firmware update, and do so frequently, causing Zigbee2MQTT to reach out to third party servers. If you disable these device initiated checks, you can still initiate a firmware update check manually.",
        "Location of override OTA index file": "Location of override OTA index file",
        "Limits the rate of requests (in milliseconds) during OTA updates to reduce network congestion. You can increase this value if your network appears unstable during OTA.": "Limits the rate of requests (in milliseconds) during OTA updates to reduce network congestion. You can increase this value if your network appears unstable during OTA.",
        "The size of file chunks sent during an update (in bytes). Note: This value may get ignored for manufacturers that require specific values.": "The size of file chunks sent during an update (in bytes). Note: This value may get ignored for manufacturers that require specific values.",
        "Enable frontend": "启用前端",
        "Package used for the frontend": "Package used for the frontend",
        "Frontend binding port. Ignored when using a unix domain socket": "Frontend binding port. Ignored when using a unix domain socket",
        "Frontend binding host. Binds to a unix socket when an absolute path is given instead.": "Frontend binding host. Binds to a unix socket when an absolute path is given instead.",
        "Enables authentication, disabled by default": "启用身份验证，默认禁用",
        "URL on which the frontend can be reached, currently only used for the Home Assistant device configuration page": "URL on which the frontend can be reached, currently only used for the Home Assistant device configuration page",
        "SSL Certificate file path for exposing HTTPS. The sibling property 'ssl_key' must be set for HTTPS to be activated.": "SSL Certificate file path for exposing HTTPS. The sibling property 'ssl_key' must be set for HTTPS to be activated.",
        "SSL key file path for exposing HTTPS. The sibling property 'ssl_cert' must be set for HTTPS to be activated.": "SSL key file path for exposing HTTPS. The sibling property 'ssl_cert' must be set for HTTPS to be activated.",
        "Base URL for the frontend. If hosted under a subpath, e.g. 'http://localhost:8080/z2m', set this to '/z2m'": "Base URL for the frontend. If hosted under a subpath, e.g. 'http://localhost:8080/z2m', set this to '/z2m'",
        "Hide frontend notifications matching specified regex strings. Example: 'z2m: Failed to ping.*'": "隐藏匹配指定正则表达式字符串的前端通知。示例：'z2m: Failed to ping.*'",
        "If true, the frontend UI is not served, only the WebSocket is maintained by Zigbee2MQTT (you are required to serve a standalone UI yourself as needed).": "如果为 true，则不提供前端 UI，Zigbee2MQTT 只维护 WebSocket（您需要根据需要自己提供独立的 UI）。",
        "Log rotation": "日志轮转",
        "Console json log": "控制台 JSON 日志",
        "Create symlink to current logs in the log directory": "在日志目录中创建指向当前日志的符号链接",
        "Output location of the log, leave empty to suppress logging": "日志输出位置，留空以抑制日志记录",
        "Location of log directory": "日志目录位置",
        "Log file name, can also contain timestamp": "日志文件名，也可以包含时间戳",
        "Logging level": "日志级别",
        "Set individual log levels for certain namespaces": "为特定命名空间设置单独的日志级别",
        "Log debug level to MQTT and frontend (may decrease overall performance)": "将调试级别记录到 MQTT 和前端（可能会降低整体性能）",
        "Do not log these namespaces (regex-based) for debug level": "Do not log these namespaces (regex-based) for debug level",
        "Number of log directories to keep before deleting the oldest one": "Number of log directories to keep before deleting the oldest one",
        "The host running syslogd, defaults to localhost.": "The host running syslogd, defaults to localhost.",
        "The port on the host that syslog is running on, defaults to syslogd's default port.": "The port on the host that syslog is running on, defaults to syslogd's default port.",
        "The network protocol to log over (e.g. tcp4, udp4, tls4, unix, unix-connect, etc).": "The network protocol to log over (e.g. tcp4, udp4, tls4, unix, unix-connect, etc).",
        "The path to the syslog dgram socket (i.e. /dev/log or /var/run/syslog for OS X).": "The path to the syslog dgram socket (i.e. /dev/log or /var/run/syslog for OS X).",
        "PID of the process that log messages are coming from (Default process.pid).": "PID of the process that log messages are coming from (Default process.pid).",
        "Host to indicate that log messages are coming from (Default: localhost).": "Host to indicate that log messages are coming from (Default: localhost).",
        "The type of the syslog protocol to use (Default: BSD, also valid: 5424).": "The type of the syslog protocol to use (Default: BSD, also valid: 5424).",
        "The name of the application (Default: Zigbee2MQTT).": "The name of the application (Default: Zigbee2MQTT).",
        "The end of line character to be added to the end of the message (Default: Message without modifications).": "The end of line character to be added to the end of the message (Default: Message without modifications).",
        "ZigBee pan ID, changing requires re-pairing all devices!": "ZigBee pan ID, changing requires re-pairing all devices!",
        "Zigbee extended pan ID, changing requires re-pairing all devices!": "Zigbee extended pan ID, changing requires re-pairing all devices!",
        "Zigbee channel, changing might require re-pairing some devices! (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid problems)": "Zigbee channel, changing might require re-pairing some devices! (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid problems)",
        "Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)": "适配器并发（例如 CC2531 为 2 或 CC26X2R1 为 16）（默认：null，使用推荐值）",
        "Adapter delay": "适配器延迟",
        "MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant": "MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant",
        "Persist cached state, only used when cache_state: true": "Persist cached state, only used when cache_state: true",
        "Send cached state on startup, only used when cache_state: true": "Send cached state on startup, only used when cache_state: true",
        "Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message": "Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message",
        "Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg": "Add an elapsed attribute to MQTT messages, contains milli秒 since the previous msg",
        "Network encryption key, changing requires re-pairing all devices!": "网络 encryption key, changing requires re-pairing all devices!",
        "Log timestamp format": "Log timestamp format",
        "Transmit power of adapter, only available for Z-Stack (CC253*/CC2652/CC1352) adapters, CC2652 = 5dbm, CC1352 max is = 20dbm (5dbm default)": "Transmit power of adapter, only available for Z-Stack (CC253*/CC2652/CC1352) adapters, CC2652 = 5dbm, CC1352 max is = 20dbm (5dbm default)",
        "Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)": "Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)",
        "Periodically check the health of Zigbee2MQTT": "Periodically check the health of Zigbee2MQTT",
        "Interval between checks in minutes": "Interval between checks in 分钟",
        "If true, will reset stats every time the health check is executed (only applicable to stats that can be reset).": "If true, will reset stats every time the health check is executed (only applicable to stats that can be reset).",
        "Used in the MQTT topic of a device. By default this is the device ID": "Used in the MQTT topic of a device. By default this is the device ID",
        "Retain MQTT messages of this device": "Retain MQTT messages of this device",
        "Disables the device (excludes device from network scans, availability and group state updates)": "禁用s the device (excludes device from network scans, availability and group state updates)",
        "Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5": "Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5",
        "QoS level for MQTT messages of this device": "QoS level for MQTT messages of this device",
        "The minimum time between payloads in seconds. Payloads received whilst the device is being throttled will be discarded": "The minimum time between payloads in seconds. Payloads received whilst the device is being throttled will be discarded",
        "Debounces messages of this device": "Debounces messages of this device",
        "Protects unique payload values of specified payload properties from overriding within debounce time": "Protects unique payload values of specified payload properties from overriding within debounce time",
        "Publish optimistic state after set": "Publish optimistic state after set",
        "Filter attributes with regex from published payload.": "Filter attributes with regex from published payload.",
        "Filter attributes with regex from being added to the cache, this prevents the attribute from being in the published payload when the value didn't change.": "Filter attributes with regex from being added to the cache, this prevents the attribute from being in the published payload when the value didn't change.",
        "Filter attributes with regex from optimistic publish payload when calling /set. (This has no effect if optimistic is set to false).": "Filter attributes with regex from optimistic publish payload when calling /set. (This has no effect if optimistic is set to false).",
        "The user-defined device icon for the frontend. It can be a full URL link to an image (e.g. https://SOME.SITE/MODEL123.jpg) or a path to a local file inside the `device_icons` directory (e.g. device_icons/MODEL123.png).": "The user-defined device icon for the frontend. It can be a full URL link to an image (e.g. https://SOME.SITE/MODEL123.jpg) or a path to a local file inside the `device_icons` directory (e.g. device_icons/MODEL123.png).",
        "Name of the device in Home Assistant": "Name of the device in Home Assistant",
        "QoS level for MQTT messages of this group": "QoS level for MQTT messages of this group",
        "Control when to publish state OFF or CLOSE for a group. 'all_members_off': only publish state OFF/CLOSE when all group members are in state OFF/CLOSE,  'last_member_state': publish state OFF whenever one of its members changes to OFF": "Control when to publish state OFF or CLOSE for a group. 'all_members_off': only publish state OFF/CLOSE when all group members are in state OFF/CLOSE,  'last_member_state': publish state OFF whenever one of its members changes to OFF"
    }
}
