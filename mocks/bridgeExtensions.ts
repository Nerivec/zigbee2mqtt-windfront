/** biome-ignore-all lint/suspicious/noTemplateCurlyInString: expected code in strings */
import type { Zigbee2MQTTAPI } from "zigbee2mqtt";
import type { Message } from "../src/types.js";

export const BRIDGE_EXTENSIONS: Message<Zigbee2MQTTAPI["bridge/extensions"]> = {
    payload: [
        {
            code: "const minutes = function (m) {\n    return m * 1000 * 60\n};\n\nconst timers = {};\nconst doAfter = function (delay, code, ...args) {\n    clearTimeout(timers[code.name]);\n    timers[code.name] = setTimeout((...params) => {\n        code(...params)\n    }, delay, ...args);\n}\n\n\n\nclass MyExampleExtension1614405068547 {\n    constructor(zigbee, mqtt, state, publishEntityState, eventBus, settings, logger) {\n        this.logger = logger;\n        logger.info('Loaded  MyExampleExtension1614405068547');\n        mqtt.publish('example/extension', 'hello from  123 MyExampleExtension1614405068547');\n        this.mqttBaseTopic = settings.get().mqtt.base_topic;\n        this.eventBus = eventBus;\n        this.mqtt = mqtt;\n        this.eventBus.on('stateChange', this.onStateChange.bind(this), this.constructor.name);\n    }\n\n\n\n    async onStateChange(data) {\n        const {\n            entity: {ieeeAddr: ID},\n            update\n        } = data;\n        console.log({update, ID});\n        \n\n        \n        const myLampIeeAddr = '0x00124b001e73227f'; // change this\n        const workLightCommandTopic = `${this.mqttBaseTopic}/${myLampIeeAddr}/set`;\n        \n        //example how to toggle state\n        if (ID === '0x00158d000224154d') { //state changed for myRemote (button click)\n            if (update.action === 'single') { //toggle work light on single click\n                //sending message to z2m, so it can toggle sonoff zbr state\n                this.mqtt.onMessage(workLightCommandTopic, JSON.stringify({\n                    state: 'toggle'\n                }));\n            }\n\n            if (update.action === 'double') { //toggle dinning light (ESPHome) on single click\n                //sending data right to the mqtt broker\n                this.mqtt.publish('switch/sonoff_basic_relay/command', 'toggle', {}, 'dinning');\n            }\n        }\n\n        if (ID === '0x00158d0002c48958') { //work chair vibration sensor\n            if (update.action) { // someone sat on the chair\n                this.logger.info('Detected vibration, turning on light');\n                this.mqtt.onMessage(workLightCommandTopic, JSON.stringify({\n                    state: 'on'\n                }));\n                //turn off ligth after 30 minutes without any activity\n                doAfter(minutes(30), function TurnOffWorkLight(topic) {\n                    this.logger.info('Turning off light');\n                    this.mqtt.onMessage(topic, JSON.stringify({\n                        state: 'off'\n                    }));\n                }.bind(this), workLightCommandTopic);\n            }\n        }\n        \n        \n        // if (ID === '0x00158d0002c4a78f') { //baby chair vibration sensor\n        //     if (update.action) { // someone sat on the chair\n        //         //sending data right to the mqtt broker\n        //         this.mqtt.publish('switch/sonoff_basic_relay/command', 'on', {}, 'dinning');\n                \n        //     }\n        // }\n        \n        \n        \n\n        // if (ID === '0x00158d0003d20443') { // kitchen door\n        //     if (update.contact !== true) { //the door is opened\n        //         controllYeelight(kitchenLight, turnOnYeelight);\n        //         //turn off ligth after 5 minutes if no more movement\n        //         doAfter(minutes(5), function TurnOffYeelight(light) {\n        //             controllYeelight(light, turnOffYeelight);\n        //         }, kitchenLight);\n        //     }\n        // }\n\n        // if (ID === '0x00158d000450d0e6') { //kitchen motion sensor\n        //     if (update.occupancy === true) { // detected motion\n        //         controllYeelight(kitchenLight, turnOnYeelight);\n        //         doAfter(minutes(5), function TurnOffYeelight(light) {\n        //             controllYeelight(light, turnOffYeelight);\n        //         }, kitchenLight);\n        //     }\n        // }\n    }\n\n    async onMQTTMessage(topic, message) {\n        // console.log({topic, message});\n    }\n    \n    async stop() {\n        return this.eventBus.removeListeners(this.constructor.name);\n    }\n}\n\n\n\n\nmodule.exports = MyExampleExtension1614405068547;\n",
            name: "user-extension1614083565739.js",
        },
    ],
    topic: "bridge/extensions",
};
